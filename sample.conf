{
    // Pool server configuration
    poolServer: {
        // Specifies which port to listen on for connections.
        // Possible values: any valid port number
        // Default: 8444
        //port: 8444,

        // Certificate file and private key file to use for the TLS secured server.
        sslCertPath: './my.domain.cer',
        sslKeyPath: './my.domain.key'
    },

    // General mining pool configuration
    pool: {
        // Name announced to the client.
        name: 'Micro Pool',

        // Pool address which the clients will set as miner address.
        address: 'NQ07 0000 0000 0000 0000 0000 0000 0000 0000',

        // Difficulty initially expected from a client before any adjustment
        // Default: 1,
        //startDifficulty: 1,

        // The lower bound for the share difficulty.
        // Default: 1
        //minDifficulty: 1,

        // Shares submitted over spsTimeUnit [ms] are used to adjust a clients share difficulty.
        // Default: 60000 (1 min)
        //spsTimeUnit: 60000,

        // Desired shares per second (SPS) for connected clients, regulates share submission rate.
        // Default: 0.2
        //desiredSps: 0.2,

        // If no valid shares are sent over a connection during connectionTimeout [ms], it is closed.
        // Default: 60 * 1000 * 10 (10 min)
        //connectionTimeout: 60 * 1000 * 10,

        // Maximum amount of open connections allowed per IP
        // Default: 100
        //maxConnPerIP: 100,

        // There only may be maxConnPerIP connection attempts per IP per maxConnTimeUnit [ms]
        // maxConnInTimePerIP default: 50
        // maxConnTimeUnit default: 60 * 1000 * 5 (5 min)
        //maxConnInTimePerIP: 100,
        //maxConnTimeUnit: 1000 * 60 * 3,

        // Number of allowed errors (invalid shares) between new settings.
        // Default: 30
        //allowedErrors: 30
    },

    // Nimiq Core configuration
    // See https://github.com/nimiq-network/core/blob/master/clients/nodejs/sample.conf for more information.

    host: "my.domain",
    //port: 8443,
    tls: {
        cert: "./my.domain.cer",
        key: "./my.domain.key"
    },
    protocol: "dumb",
    //type: "full",
    //network: "test",
    log: {
        //level: "verbose"
    }
}
